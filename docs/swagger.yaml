basePath: /
definitions:
  models.CreateSongReq:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  title: Test songs library
  version: "1.0"
paths:
  /api/v1/songs:
    delete:
      description: Delete song
      parameters:
      - description: Request
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: OK
        "404":
          description: Not found
        "500":
          description: Internal
      summary: Delete song
    get:
      description: Get songs
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: group
        in: query
        name: group
        type: string
      - description: song
        in: query
        name: song
        type: string
      - description: text
        in: query
        name: text
        type: string
      - description: release date
        in: query
        name: release_date
        type: string
      - description: link
        in: query
        name: link
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad request
        "404":
          description: Not found
        "500":
          description: Internal
      summary: Get songs
    post:
      consumes:
      - application/json
      description: Create song
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateSongReq'
      produces:
      - application/json
      responses:
        "201":
          description: Song created
        "409":
          description: Already exists
        "500":
          description: Internal
      summary: Create song
    put:
      consumes:
      - application/json
      description: Update song
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Not found
        "500":
          description: Internal
      summary: Update song
  /api/v1/songs/{id}:
    get:
      description: Get text
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
        "404":
          description: Not found
        "500":
          description: Internal
      summary: Get text
swagger: "2.0"
